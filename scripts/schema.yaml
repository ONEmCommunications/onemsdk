openapi: 3.0.0
info:
  version: v2.0
  title: ONEm JSON response schema
  description: ''
paths: {}
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/romeo1m/schemajson/v1
components:
  schemas:
    MenuItem:
      title: MenuItem
      description: '[`Menu`](#menu) related component used to display menu items,
        selectable or

        raw'
      type: object
      properties:
        type:
          title: Type
          description: Indicates the type of the object
          enum:
          - option
          - content
          type: string
        description:
          title: Description
          description: The displayed text for this `MenuItem`
          type: string
        text_search:
          title: Text_Search
          description: If the user does not send a proper option marker and sends
            some input, this field will be used to search and narrow down the options
            against the user input. <br> max 1000 chars
          type: string
        method:
          title: Method
          description: HTTP method indicating how to trigger the callback path. Defaults
            to `"GET"`
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - HEAD
          - OPTIONS
          - TRACE
          type: string
        path:
          title: Path
          description: Next route callback path, accessed upon user selection <br>
            _required only for `type=option`_
          type: string
      required:
      - type
      - description
    MenuMeta:
      title: MenuMeta
      description: "[`Menu`](#menu) related component holding configuration fields\
        \ for the menu\n "
      type: object
      properties:
        auto_select:
          title: Auto_Select
          description: Will be automatically selected if set to `true` and in case
            of a single option in the menu
          default: false
          type: boolean
    Menu:
      title: Menu
      description: A top level component used to display a menu or raw text
      type: object
      properties:
        type:
          title: Type
          description: Indicates the type of the object, defaults to `"menu"`
          const: menu
          type: string
        body:
          title: Body
          description: Composed of [`MenuItem`](#menuitem) objects
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
        header:
          title: Header
          description: The header of the menu
          type: string
        footer:
          title: Footer
          description: The header of the menu
          type: string
        meta:
          title: Meta
          description: '[`MenuMeta`](#menumeta) object. Contains configuration flags'
          allOf:
          - $ref: '#/components/schemas/MenuMeta'
      required:
      - body
    MenuItemFormItem:
      title: MenuItemFormItem
      description: '[`FormItem`](#formitem) related component used to display menu
        items,

        selectable or raw'
      type: object
      properties:
        type:
          title: Type
          description: Indicates the type of the object
          enum:
          - option
          - content
          type: string
        description:
          title: Description
          description: The description for this `MenuItemFormItem`
          type: string
        value:
          title: Value
          description: The value for this `MenuItemFormItem`, used in form serialization
            <br> _required only for `type=option`_
          type: string
        text_search:
          title: Text_Search
          description: If the user does not send a proper option marker and sends
            some input, this field will be used to search and narrow down the options
            against the user input <br> max 1000 chars
          type: string
      required:
      - type
      - description
    MenuFormItemMeta:
      title: MenuFormItemMeta
      description: '[`FormItem`](#formitem) related component holding configuration
        field for

        a menu inside a form item'
      type: object
      properties:
        auto_select:
          title: Auto_Select
          description: Will be automatically selected if set to `true` and in case
            of a single option in the menu
          default: false
          type: boolean
        multi_select:
          title: Multi_Select
          description: Allows multiple options to be selected
          default: false
          type: boolean
        numbered:
          title: Numbered
          description: Displays numbers instead of letter option markers
          default: false
          type: boolean
    FormItem:
      title: FormItem
      description: '[`Form`](#form) related component used to acquire certain information
        from

        the user'
      type: object
      properties:
        type:
          title: Type
          description: Indicates the type of the object
          enum:
          - string
          - date
          - datetime
          - hidden
          - int
          - float
          - form-menu
          - email
          - url
          - location
          - regex
          type: string
        name:
          title: Name
          description: The name of this `FormItem`, used in form serialization
          type: string
        description:
          title: Description
          description: The description of this `FormItem`
          type: string
        header:
          title: Header
          description: If provided will overwrite the `Form.header`
          type: string
        footer:
          title: Footer
          description: If provided will overwrite the `Form.footer`
          type: string
        body:
          title: Body
          description: Composed of [`MenuItemFormItem`](#menuitemformitem) objects
            <br> _required only for `type=form-menu`_
          type: array
          items:
            $ref: '#/components/schemas/MenuItemFormItem'
        value:
          title: Value
          description: Value to pass in the form serialization data <br> _applies
            only for `type=hidden`_
          type: string
        chunking_footer:
          title: Chunking_Footer
          description: Shown in the footer of the sms chunks
          type: string
        confirmation_label:
          title: Confirmation_Label
          description: Shown in the confirmation menu
          type: string
        min_length:
          title: Min_Length
          description: Validates the user input <br> _applies only for `type=string`_
          type: integer
        min_length_error:
          title: Min_Length_Error
          description: Message to be shown on `min_length` error
          type: string
        max_length:
          title: Max_Length
          description: Validates the user input <br> _applies only for `type=string`_
          type: integer
        max_length_error:
          title: Max_Length_Error
          description: Message to be shown on `max_length` error
          type: string
        min_value:
          title: Min_Value
          description: Validates the user input <br> _applies only for `type=int|float`_
          type: number
        min_value_error:
          title: Min_Value_Error
          description: Message to be shown on `min_value` error
          type: string
        max_value:
          title: Max_Value
          description: Validates the user input <br> _applies only for `type=int|float`_
          type: number
        max_value_error:
          title: Max_Value_Error
          description: Message to be shown on `max_value` error
          type: string
        meta:
          title: Meta
          description: '[`MenuFormItemMeta`](#menuformitemmeta) object <br> _applies
            only for `type=form-menu`_'
          allOf:
          - $ref: '#/components/schemas/MenuFormItemMeta'
        method:
          title: Method
          description: Http method, how the callback url should be triggered
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - HEAD
          - OPTIONS
          - TRACE
          type: string
        required:
          title: Required
          description: User can `SKIP` this `FormItem` if set to `false`
          default: false
          type: boolean
        pattern:
          title: Pattern
          description: ECMA Script regex pattern string <br> _applies only for `type=regex`_
          type: string
        status_exclude:
          title: Status_Exclude
          description: If `true` this step will be excluded from the form completion
            status
          default: false
          type: boolean
        status_prepend:
          title: Status_Prepend
          description: If `true` this step will be prepended to the body of the response.
            Appended otherwise
          default: false
          type: boolean
        url:
          title: Url
          description: Callback url triggered right after the choice has been set
            for this form item
          type: string
        validate_type_error:
          title: Validate_Type_Error
          description: An error message to be shown on basic type validation
          type: string
        validate_type_error_footer:
          title: Validate_Type_Error_Footer
          description: Shown in the error message footer
          type: string
        validate_url:
          title: Validate_Url
          description: 'The callback url path `"GET"` triggered to validate user input.
            <br> A query string is sent by ONEm: `?form_item_name=user_input` <br>
            The validate_url must return a json response: `{"valid": true/false, "error":
            "Some message in case of validation errors"}`'
          type: string
      required:
      - type
      - name
    FormMeta:
      title: FormMeta
      description: '[`Form`](#form) related component holding configuration fields
        for the form'
      type: object
      properties:
        completion_status_show:
          title: Show completion status
          description: If `true` will show a completion status. Defaults to `false`
          default: false
          type: boolean
        completion_status_in_header:
          title: Show completion status in header
          description: If `true` will indicate the status in the header. Defaults
            to `false`, which means it will be shown below header if the completion
            status is shown
          default: false
          type: boolean
        skip_confirmation:
          title: Skip confirmation
          description: If `true` will not ask for confirmation. Defaults to `false`
          default: false
          type: boolean
    Form:
      title: Form
      description: A top level component used to acquire information from the user
      type: object
      properties:
        type:
          title: Type
          description: Indicates the type of the object, defaults to `"form"`
          const: form
          type: string
        body:
          title: Body
          description: Sequence of [`FormItem`](#formitem) objects used to acquire
            information from user
          type: array
          items:
            $ref: '#/components/schemas/FormItem'
        method:
          title: Method
          description: HTTP method indicating how to trigger the callback path. Defaults
            to `"POST"`
          default: POST
          enum:
          - GET
          - POST
          - PUT
          - PATCH
          - DELETE
          - HEAD
          - OPTIONS
          - TRACE
          type: string
        path:
          title: Path
          description: The callback path used to send the serialized form data
          type: string
        header:
          title: Header
          description: The header of the form. It can be overwritten by each body
            component
          type: string
        footer:
          title: Footer
          description: The footer of the form. It can be overwritten by each body
            component
          type: string
        meta:
          title: Meta
          description: '[`FormMeta`](#formmeta) object. Contains configuration flags'
          allOf:
          - $ref: '#/components/schemas/FormMeta'
      required:
      - body
      - path
    Response:
      title: Response
      description: Root component wrapping a `Menu` or a `Form`
      type: object
      properties:
        content_type:
          title: Content type
          description: The content type of the response
          enum:
          - form
          - menu
          type: string
        content:
          title: Content
          description: The content of the response. Either `Form` or a `Menu`
          anyOf:
          - allOf:
            - $ref: '#/components/schemas/Form'
          - allOf:
            - $ref: '#/components/schemas/Menu'
      required:
      - content_type
      - content
